function updateBoats(){settings.boats=settings.boats.sort(DynamicSort("name"));file.put(PATH.settings,JSON.stringify(settings));get("boat-list").innerHTML="";for(var a=0;a<settings.boats.length;a++)get("boat-list").innerHTML+=`<div class="super-card"><div class="card ${a==settings.boat?"selected":""}" onclick="settings.boat=${a};updateBoats()">
    <span class="edit lined" onclick="boatclicked=${a};editMenu.popup()"><svg fill="none" height="24" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" viewBox="0 0 24 24" width="24" xmlns="http://www.w3.org/2000/svg"><path d="M11 4H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7"/><path d="M18.5 2.5a2.121 2.121 0 0 1 3 3L12 15l-4 1 1-4 9.5-9.5z"/></svg></span>
    <span>${settings.boats[a].name}</span>
    <span>Seats: ${settings.boats[a].seats}</span>
</div></div>`;get("boat-list").innerHTML+='<div class="card lined" onclick="addBoat(false)" title="New boat" style="cursor:pointer">\n    <svg  xmlns="http://www.w3.org/2000/svg"  width="128"  height="128"  viewBox="0 0 24 24"  fill="none"  stroke="currentColor"  stroke-width="2"  stroke-linecap="round"  stroke-linejoin="round"  class="icon icon-tabler icons-tabler-outline icon-tabler-plus"><path stroke="none" d="M0 0h24v24H0z" fill="none"/><path d="M12 5l0 14" /><path d="M5 12l14 0" /></svg>\n</div>';
get("balancer").getElementsByClassName("overlay")[0].style.display="flex";get("boat-container").innerHTML='<div class="boat"></div>';if(-1!=settings.boat){get("dynamic-root").innerText=`:root { --part-height: ${100/settings.boats[settings.boat].seats}%; }`;boatPos=[];for(a=0;a<2*parseInt(settings.boats[settings.boat].seats,10);a++)a%2&&(getClass("boat")[0].innerHTML+='<div class="part"></div>'),boatPos[a]="SPACE",get("boat-container").innerHTML+=`<div class="label"><span>${a}</span><b></b></div>`;
for(a=0;a<getClass("label").length;a++)getClass("label")[a].getTag("span")[0].addEventListener("click",d=>{if(-1==moving){d=d.composedPath();var c=d[0].parentElement;c.getTag("b")[0].classList="active";moving=Array.from(getClass("label")).indexOf(c)}else{d=d.composedPath();c=d[0].parentElement;d=c.getTag("b")[0];c=Array.from(getClass("label")).indexOf(c);var e=getClass("label")[moving],f=e.getTag("b")[0];c==moving?e.getTag("b")[0].classList="":c%2!=moving%2?(e.getTag("b")[0].classList="",alert("You cannot move people to the other side of the boat")):
(boatPos.swap(moving,c),f.classList="",f.innerText="SPACE"==boatPos[moving]?"SPACE":`${boatPos[moving].n} (${boatPos[moving].w}kg)`,d.innerText="SPACE"==boatPos[c]?"SPACE":`${boatPos[c].n} (${boatPos[c].w}kg)`);moving=-1}});sortLabels()}}function deleteBoat(a){confirm("Are you sure that you want to delete "+settings.boats[a].name+" from this list?",`(function(res) {
        if (res == 1) {
            settings.boats.splice(${a}, 1);
            if (settings.boat == ${a}) settings.boat = -1;
            updateBoats();
        }
    })(\${c})`)}function sortLabels(){if(-1!=settings.boat)for(let e=0;e<2*settings.boats[settings.boat].seats;e++){var a=getClass("label")[e],d=getClass("part")[Math.floor(e/2)],c=d.getBoundingClientRect();c.x&&(a.style.top="unset",a.style.left="unset",a.style.right="unset",a.style.top=c.top+(parseInt(getComputedStyle(d).height)-parseInt(getComputedStyle(a).height))/2-5+"px",1==e%2?a.style.left=`calc(${c.left}px + 27% - 4px)`:a.style.right=c.right+4+"px")}}window.addEventListener("resize",sortLabels);
function tempBoat(a){if("return"==a){for(a=0;a<boatPos.length;a++)getClass("label")[a].getTag("b")[0].innerText="SPACE"==boatPos[a]?"SPACE":`${boatPos[a].n} (${boatPos[a].w}kg)`;get("left-total").innerText=optimal.closest.totals[0];get("left-percent").innerText=optimal.closest.leftPercent.toString().substring(0,5);get("right-total").innerText=optimal.closest.totals[1];get("right-percent").innerText=optimal.closest.rightPercent.toString().substring(0,5);0<optimal.closest.balance?(a=(optimal.closest.leftPercent-
optimal.closest.rightPercent).toString().substring(0,4),get("right-offset").innerText="",get("left-offset").innerHTML="+"+a+"%<br>+"+optimal.closest.diff+"kg"):(a=(optimal.closest.rightPercent-optimal.closest.leftPercent).toString().substring(0,4),get("left-offset").innerText="",get("right-offset").innerHTML="+"+a+"%<br>+"+optimal.closest.diff+"kg")}else if("number"==typeof a&&optimal.alternatives[a]){b=optimal.alternatives[a];for(a=0;a<2*parseInt(settings.boats[settings.boat].seats,10);a++)getClass("label")[a].getTag("b")[0].innerText=
"SPACE";for(a=0;a<b.left.length;a++)getClass("label")[2*a].getTag("b")[0].innerText=b.left[a].n+" ("+b.left[a].w+"kg)";for(a=0;a<b.right.length;a++)getClass("label")[2*a+1].getTag("b")[0].innerText=b.right[a].n+" ("+b.right[a].w+"kg)";get("left-total").innerText=b.totals[0];get("left-percent").innerText=b.leftPercent.toString().substring(0,5);get("right-total").innerText=b.totals[1];get("right-percent").innerText=b.rightPercent.toString().substring(0,5);0<b.balance?(a=(b.leftPercent-b.rightPercent).toString().substring(0,
4),get("right-offset").innerText="",get("left-offset").innerHTML="+"+a+"%<br>+"+b.diff+"kg"):(a=(b.rightPercent-b.leftPercent).toString().substring(0,4),get("left-offset").innerText="",get("right-offset").innerHTML="+"+a+"%<br>+"+b.diff+"kg")}}function swap(a){confirm("Change to this boat position?",`(function(res) {
        if (res == 1) {
            var prevAlt = optimal.alternatives[${a}];
            optimal.alternatives.splice(${a}, 1);
            optimal.alternatives.push(optimal.closest);
            optimal.closest = prevAlt;
            for (let i = 0; i < optimal.closest.left.length; i++) {
                boatPos[i * 2] = optimal.closest.left[i];
                boatPos[i * 2 + 1] = optimal.closest.right[i];
            }
            get('alt-div').innerText = '';
            for (let i = 0; i < optimal.alternatives.length; i++) {
                get('alt-div').innerHTML += \`<div onmouseover="tempBoat(\${i})" onmouseout="tempBoat('return')" onclick="swap(\${i})">\${i + 1}</div>\`;
            }
        }
    })(\${c})`)};
